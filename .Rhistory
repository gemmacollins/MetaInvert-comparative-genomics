## Deal with NAs ####
sum(is.na(pca_mx))
is.na(pca_mx)
pc_omit <- prcomp(na.omit(pca_mx), center = TRUE, scale = TRUE)
sum(is.na(pc_omit))
## Results ####
ggbiplot(pc_omit, obs.scale=1, var.scale = 1)+
ggtitle("PCA #1: 6 variables, NAs omitted")
#library(GGally)
# library(taxize)
library(ggbiplot)
## Results ####
ggbiplot(pc_omit, obs.scale=1, var.scale = 1)+
ggtitle("PCA #1: 6 variables, NAs omitted")
summary(pc_omit) #Get summary stats
str(pc_omit)
plot(pc_omit) #Screeplot for number of components
pc_omit #Get standard deviations and rotation
seq_success
bag_2
head(bag_2)
names(seq_success)
bag_2 %>%
dplyr::select(countgroup, read_length,
total_reads, n_contigs, assembly_length,GC,
N50, N75, L50, L75, human_reads, Busco_C, Busco_F, Busco_D, Busco_M) ->
params_to_plot_GC
# Generate numerical matrix (pca_mx) ####
pca_mx <- matrix(unlist(params_to_plot_GC), ncol=12)
# head(params_to_plot_GC)
# typeof(params_to_plot_GC)
# dim(params_to_plot_GC)
unique(params_to_plot_GC$countgroup)
# head(params_to_plot_GC)
# typeof(params_to_plot_GC)
dim(params_to_plot_GC)
# Generate numerical matrix (pca_mx) ####
pca_mx <- matrix(unlist(params_to_plot_GC), ncol=15)
# head(pca_mx)
# typeof(pca_mx)
rownames(pca_mx) <- params_to_plot_GC$countgroup
colnames(pca_mx) <- colnames(params_to_plot_GC)
# head(pca_mx)
pca_mx <- pca_mx[,-c(1:6)]
# head(pca_mx)
class(pca_mx)<-"numeric"
# Perform the PCA analyses ####
## Deal with NAs ####
sum(is.na(pca_mx))
pc_omit <- prcomp(na.omit(pca_mx), center = TRUE, scale = TRUE)
sum(is.na(pc_omit))
## Results ####
ggbiplot(pc_omit, obs.scale=1, var.scale = 1)+
ggtitle("PCA #1: 6 variables, NAs omitted")
summary(pc_omit) #Get summary stats
str(pc_omit)
## Results ####
ggbiplot(pc_omit, obs.scale=1, var.scale = 1)+
ggtitle("PCA #1: 9 variables, NAs omitted")
plot(pc_omit) #Screeplot for number of components
pc_omit #Get standard deviations and rotation
colnames(pca_mx)
# Read data ####
seq_success <- read_tsv(file = "Report_Full.tsv")
names(seq_success) <- c("libid", "batch", "phylum", "countgroup", "taxon", "taxid",
"read_length", "reads_max", "Reads median seq:",
"Reads min seq:", "Reads N 50:", "total_reads", "total_bases",
"n_contigs", "largest_contig", "assembly_length", "GC",
"N50", "N75", "L50", "L75", "bag", "human_reads",
"busco_lineage", "Busco_C", "Busco_S", "Busco_D", "Busco_F",
"Busco_M", "Busco_set_size")
# Select genomes ####
# bag2, no controls, otherwise unfiltered
seq_success %>%
filter(bag == "bag2",
!(phylum %in% c("Chordata", "CONTROL"))) ->
bag_2
bag_2 %>%
dplyr::select(countgroup, read_length,
total_reads, n_contigs, assembly_length,GC,
N50, N75, L50, L75, human_reads, Busco_C, Busco_F, Busco_D, Busco_M) ->
params_to_plot_GC
# head(params_to_plot_GC)
# typeof(params_to_plot_GC)
dim(params_to_plot_GC)
# Generate numerical matrix (pca_mx) ####
pca_mx <- matrix(unlist(params_to_plot_GC), ncol=15)
pca_mx
head(pca_mx)
# head(pca_mx)
# typeof(pca_mx)
rownames(pca_mx) <- params_to_plot_GC$countgroup
colnames(pca_mx) <- colnames(params_to_plot_GC)
colnames(pca_mx) <- colnames(params_to_plot_GC)
head(pca_mx)
# head(pca_mx)
pca_mx <- pca_mx[,-c(1)]
# head(pca_mx)
class(pca_mx)<-"numeric"
# Perform the PCA analyses ####
## Deal with NAs ####
sum(is.na(pca_mx))
pc_omit <- prcomp(na.omit(pca_mx), center = TRUE, scale = TRUE)
sum(is.na(pc_omit))
## Results ####
ggbiplot(pc_omit, obs.scale=1, var.scale = 1)+
ggtitle("PCA #1: 9 variables, NAs omitted")
## Results ####
ggbiplot(pc_omit, obs.scale=1, var.scale = 1)+
ggtitle("PCA #2: 9 variables, NAs omitted")
summary(pc_omit) #Get summary stats
str(pc_omit)
plot(pc_omit) #Screeplot for number of components
pc_omit #Get standard deviations and rotation
colnames(pca_mx)
summary(pc_omit)
pc_omit
rm(list = ls())
library(tidyverse)
#library(GGally)
# library(taxize)
library(ggbiplot)
# Read data ####
seq_success <- read_tsv(file = "Report_Full.tsv")
names(seq_success) <- c("libid", "batch", "phylum", "countgroup", "taxon", "taxid",
"read_length", "reads_max", "Reads median seq:",
"Reads min seq:", "Reads N 50:", "total_reads", "total_bases",
"n_contigs", "largest_contig", "assembly_length", "GC",
"N50", "N75", "L50", "L75", "bag", "human_reads",
"busco_lineage", "Busco_C", "Busco_S", "Busco_D", "Busco_F",
"Busco_M", "Busco_set_size")
# Select genomes ####
# bag2, no controls, otherwise unfiltered
seq_success %>%
filter(bag == "bag2",
!(phylum %in% c("Chordata", "CONTROL"))) ->
bag_2
#select columns of interest
bag_2 %>%
dplyr::select(libid, batch, phylum, countgroup, taxon, taxid, # read_length, total_reads, total_bases,
total_reads, n_contigs, assembly_length,
N50, human_reads, Busco_M) ->
params_to_plot_GC
# Generate numerical matrix (pca_mx) ####
pca_mx <- matrix(unlist(params_to_plot_GC), ncol=12)
# head(pca_mx)
# typeof(pca_mx)
rownames(pca_mx) <- params_to_plot_GC$countgroup
colnames(pca_mx) <- colnames(params_to_plot_GC)
pca_mx
head(pca_mx)
# head(pca_mx)
pca_mx <- pca_mx[,-c(1:6)]
# head(pca_mx)
class(pca_mx)<-"numeric"
# Perform the PCA analyses ####
## Deal with NAs ####
sum(is.na(pca_mx))
pc_omit <- prcomp(na.omit(pca_mx), center = TRUE, scale = TRUE)
sum(is.na(pc_omit))
## Results ####
ggbiplot(pc_omit, obs.scale=1, var.scale = 1)+
ggtitle("PCA_1: 6 variables, NAs omitted")
summary(pc_omit) #Get summary stats
str(pc_omit)
#str(pc_omit)
plot(pc_omit) #Screeplot for number of components
#str(pc_omit)
#plot(pc_omit) #Screeplot for number of components
pc_omit #Get standard deviations and rotation
params_to_plot_GC
library(tidyverse)
library(ggbiplot)
rm(list = ls())
# Read data ####
seq_success <- read_tsv(file = "Report_Full.tsv")
names(seq_success) <- c("libid", "batch", "phylum", "countgroup", "taxon", "taxid",
"read_length", "reads_max", "Reads median seq:",
"Reads min seq:", "Reads N 50:", "total_reads", "total_bases",
"n_contigs", "largest_contig", "assembly_length", "GC",
"N50", "N75", "L50", "L75", "bag", "human_reads",
"busco_lineage", "Busco_C", "Busco_S", "Busco_D", "Busco_F",
"Busco_M", "Busco_set_size")
# Select only bag2, no controls, otherwise unfiltered
seq_success %>%
filter(bag == "bag2",
!(phylum %in% c("Chordata", "CONTROL"))) ->
bag2
# Acari %>%
#   left_join(Acari_orders, by = c("genus" = "query")) ->
#   Acari
#
# Acari[8,5] <- c("Sarcoptiformes")
# Acari[8,6] <- c("Oribatida")
# Acari[13,5] <- c("Sarcoptiformes")
# Acari[13,6] <- c("Oribatida")
#
# save(file = "Acari_orders_all.Rdata", Acari)
load(file = "Acari_orders_all.Rdata")
View(Acari)
Acari %>%
filter(!is.na(suborder)) ->
oribatids
bag2 %>%
mutate(countgroup_2 = case_when(
taxon %in% oribatids$taxon ~ "Oribatida",
TRUE ~ countgroup
)) ->
bag2
bag2 %>%
mutate(countgroup_2 = case_when(
taxon %in% oribatids$taxon ~ "Oribatida",
TRUE ~ countgroup
)) ->
bag2
bag2
bag2 %>%
group_by(taxon) %>%
summarise(n = n()) %>%
arrange(desc(n)) ->
bag2_sorted
load(dplyr)
libaray(dplyr)
library(dplyr)
bag2 %>%
group_by(taxon) %>%
summarise(n = n()) %>%
arrange(desc(n)) ->
bag2_sorted
bag2 %>%
group_by(taxon) %>%
summarise(n = n()) %>%
arrange(desc(n)) ->
bag2_sorted
library(tidyverse)
library(ggbiplot)
library(GGally)
library(taxize)
bag2 %>%
group_by(taxon) %>%
summarise(n = n()) %>%
arrange(desc(n)) ->
bag2_sorted
bag2 %>%
group_by(taxon) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
mutate(genus = str_split_fixed(taxon, " ", 2)[,1]) ->
bag2_sorted
head(bag2)
bag2[, .(n_species = uniqueN(taxon))]
taxon_list <- unique(bag2$taxon)
taxon_list
View(Acari)
bag2 %>%
filter(countgroup == "Collembola") %>%
group_by(taxon) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
mutate(genus = str_split_fixed(taxon, " ", 2)[,1]) ->
Collembola
library(tidyverse)
library(ggbiplot)
library(GGally)
library(taxize)
# Read data ####
seq_success <- read_tsv(file = "Report_Full.tsv")
names(seq_success) <- c("libid", "batch", "phylum", "countgroup", "taxon", "taxid",
"read_length", "reads_max", "Reads median seq:",
"Reads min seq:", "Reads N 50:", "total_reads", "total_bases",
"n_contigs", "largest_contig", "assembly_length", "GC",
"N50", "N75", "L50", "L75", "bag", "human_reads",
"busco_lineage", "Busco_C", "Busco_S", "Busco_D", "Busco_F",
"Busco_M", "Busco_set_size")
# Select only bag2, no controls, otherwise unfiltered
seq_success %>%
filter(bag == "bag2",
!(phylum %in% c("Chordata", "CONTROL"))) ->
bag2
bag2 %>%
filter(countgroup == "Collembola") %>%
group_by(taxon) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
mutate(genus = str_split_fixed(taxon, " ", 2)[,1]) ->
Collembola
bag2 %>%
filter(countgroup == "Acari") %>%
group_by(taxon) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
mutate(genus = str_split_fixed(taxon, " ", 2)[,1]) ->
Acari
bag2
load(file = "Acari_orders_all.Rdata")
Acari %>%
filter(!is.na(suborder)) ->
oribatids
bag2 %>%
mutate(countgroup_2 = case_when(
taxon %in% oribatids$taxon ~ "Oribatida",
TRUE ~ countgroup
)) ->
bag2
# Clean up
rm(Acari, oribatids)
taxon_list <- unique(bag2$taxon)
taxon_list
#select columns of interest
bag2 %>%
dplyr::select(libid, batch, phylum, countgroup_2, taxon, taxid, # read_length, total_bases,
total_reads, n_contigs, assembly_length, GC,
N50, human_reads, Busco_M, Busco_C, Busco_F) ->
params_to_plot_GC
params_to_plot_GC
bag2 %>%
dplyr::select(libid, batch, phylum, countgroup_2, taxon, taxid, # read_length, total_bases,
total_reads, n_contigs, assembly_length,
N50, human_reads, Busco_M, Busco_C, Busco_F) ->
params_to_plot_GC
params_to_plot_GC %>%
pivot_longer(total_reads:Busco_M, names_to = "parameter") %>%
ggplot(mapping = aes(x = value + 1)) +
geom_histogram(bins=100) +
scale_x_log10() +
scale_y_log10() +
facet_grid(countgroup_2 ~ parameter, scales = "free_x") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90),
strip.text.y = element_text(angle = 0)) ->
parameter_distribution
parameter_distribution
params_to_plot_GC %>%
pivot_longer(total_reads:Busco_M, names_to = "parameter") %>%
ggplot(mapping = aes(x = value + 1)) +
geom_histogram(bins=500) +
scale_x_log10() +
scale_y_log10() +
facet_grid(countgroup_2 ~ parameter, scales = "free_x") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90),
strip.text.y = element_text(angle = 0)) ->
parameter_distribution
parameter_distribution
params_to_plot_GC %>%
pivot_longer(total_reads:Busco_M, names_to = "parameter") %>%
ggplot(mapping = aes(x = value + 1)) +
geom_histogram(bins=50) +
scale_x_log10() +
scale_y_log10() +
facet_grid(countgroup_2 ~ parameter, scales = "free_x") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90),
strip.text.y = element_text(angle = 0)) ->
parameter_distribution
parameter_distribution
# pdf('plots.pdf')
# par(mfrow=c(2,2))
params_to_plot_GC %>%
ggplot(mapping = aes(x = total_reads)) +
ggtitle("total_reads")+
geom_histogram(bins=100) ->
total_reads
total_reads
library(ggplot2)
library(ggthemes)
install.packages("readxl", "ggthemes")
install.packages("readxl", "ggthemes")
install.packages("readxl", "ggthemes")
library(readxl)
library(ggplot2)
library(ggthemes)
install.packages("ggthemes")
install.packages("Rtools","ggthemes")
library(ggplot2)
library(ggthemes)
library(readxl)
bag2
typeof(bag2)
datafile <- bag2
attach(datafile)
typeof(params_to_plot_GC)
pca_mx <- matrix(unlist(params_to_plot_GC), ncol=14)
rownames(pca_mx) <- params_to_plot_GC$countgroup_2
colnames(pca_mx) <- colnames(params_to_plot_GC)
datafile <- pca_mx
attach(datafile)
View(bag2)
View(bag2)
boxplot1 <- ggplot(datafile, aes(x=countgroup_2, y=log(total_reads), fill=countgroup_2))+
geom_boxplot(outlier.color="red", outlier.shape = =8, outlier.size=5)
boxplot1 <- ggplot(datafile, aes(x=countgroup_2, y=log(total_reads), fill=countgroup_2))+
geom_boxplot(outlier.color="red", outlier.shape = 8, outlier.size=5)
datafile <- bag2
boxplot1 <- ggplot(datafile, aes(x=countgroup_2, y=log(total_reads), fill=countgroup_2))+
geom_boxplot(outlier.color="red", outlier.shape = 8, outlier.size=5)
boxplot1
boxplot1 <- ggplot(datafile, aes(x=countgroup_2, y=log(total_reads), fill=countgroup_2))+
geom_boxplot()
boxplot1
boxplot1 <- ggplot(datafile, aes(x=countgroup_2, y=total_reads, fill=countgroup_2))+
geom_boxplot()
boxplot1
boxplot1 <- ggplot(datafile, aes(x=countgroup_2, y=n_contigs, fill=countgroup_2))+
geom_boxplot()
boxplot1
boxplot1 <- ggplot(datafile, aes(x=countgroup_2, y=log(n_contigs), fill=countgroup_2))+
geom_boxplot()
boxplot1
ggplot(datafile) + geom_point(aes(x=total_reads, y=n_contigs))
ggplot(datafile) + geom_point(aes(x=total_reads, y=n_contigs, fill=countgroup_2))
ggplot(datafile) + geom_point(aes(x=total_reads, y=n_contigs, col=countgroup_2))
ggplot(datafile) + geom_point(aes(x=total_reads, y=n_contigs, col=countgroup_2, shape=countgroup_2))
ggplot(datafile) + geom_point(aes(x=total_reads, y=n_contigs, col=countgroup_2))
ggplot(datafile)+ geom_density(aes(x=total_reads, y=n_contigs, col=countgroup_2))
mfrow
par(mfrow)
$mfrow
par()
data10 <- rnorm(10,0,1)
hist(data10)
data10 <- rnorm(10,0,1)
hist(data10)
data10 <- rnorm(10,0,1)
hist(data10)
par(mfrow = c(1,2))
hist(data10)
par(mfrow = c(1,1)
ggplot(datafile) + geom_point(aes(x=total_reads, y=n_contigs, col=countgroup_2))
ggplot(datafile) + geom_point(aes(x=total_reads, y=n_contigs, col=countgroup_2))
boxplot1
ggplot(datafile) + geom_point(aes(x=total_reads, y=n_contigs, col=countgroup_2))
bag2
ggplot(datafile) + geom_point(aes(x=total_reads, y=n_contigs, col=countgroup_2))+
ggtitle("bag2, unfiltered, n=412")
ggplot(datafile) + geom_point(aes(x=total_reads, y=n_contigs, col=countgroup_2))+
ggtitle("bag2, unfiltered, n=412-104NAs=308")
ggplot(datafile) + geom_point(aes(x=total_reads, y=n_contigs, col=countgroup_2))+
ggtitle("bag2, unfiltered, n = 412-104NAs = 308")
total_reads_v_n_contigs <- ggplot(datafile) + geom_point(aes(x=total_reads, y=n_contigs, col=countgroup_2))+
ggtitle("bag2, unfiltered, n = 412-104NAs = 308")
png("total reads vs n contigs.png")
total_reads_v_n_contigs <- ggplot(datafile) + geom_point(aes(x=total_reads, y=n_contigs, col=countgroup_2))+
ggtitle("bag2, n = 412-104NAs = 308")
print(total_reads_v_n_contigs)
dev.off()
total_reads_v_n_contigs <- ggplot(datafile) + geom_point(aes(x=n_contigs, y=total_reads, col=countgroup_2))+
ggtitle("bag2, n = 412-104NAs = 308")
total_reads_v_n_contigs
boxplot1 <- ggplot(datafile, aes(x=countgroup_2, y=log(n_contigs), fill=countgroup_2,))+
geom_boxplot()
boxplot1
boxplot1 <- ggplot(datafile, aes(x=countgroup_2, y=n_contigs, fill=countgroup_2,))+
geom_boxplot()
boxplot1
boxplot1 <- ggplot(datafile, aes(x=countgroup_2, y=total_Reads, fill=countgroup_2,))+
geom_boxplot()
boxplot1 <- ggplot(datafile, aes(x=countgroup_2, y=total_reads, fill=countgroup_2,))+
geom_boxplot()
boxplot1
boxplot1 <- ggplot(datafile, aes(x=countgroup_2, y=total_reads, fill=countgroup_2,))+
geom_boxplot()+
stat_boxplot(geom="errorbar")
boxplot1
total_reads_v_n_contigs <- ggplot(datafile) + geom_point(aes(x=total_reads, y=n_contigs, col=countgroup_2))+
ggtitle("bag2, n = 412-104NAs = 308")
print(total_reads_v_n_contigs)
ggplot(datafile) + geom_point(aes(x=total_reads, y=N50, col=countgroup_2))+
ggtitle("bag2, n = 412-104NAs = 308")
ggplot(datafile) + geom_point(aes(x=n_contigs, y=N50, col=countgroup_2))+
ggtitle("bag2, n = 412-104NAs = 308")
ggplot(datafile) + geom_point(aes(x=N50, y=Busco_CF, col=countgroup_2))+
ggtitle("bag2, n = 412-104NAs = 308")
ggplot(datafile) + geom_point(aes(x=N50, y=Busco_M, col=countgroup_2))+
ggtitle("bag2, n = 412-104NAs = 308")
ggplot(datafile, aes(x=countgroup_2, y=total_reads, fill=countgroup_2,))+
geom_boxplot()+
stat_boxplot(geom="errorbar")
ggplot(bag2, aes(x = assembly_length, y = Busco_M, color = log(N50)))
ggplot(bag2, aes(x = assembly_length, y = Busco_M))
ggplot(bag2, aes(x = assembly_length, y = Busco_M, color = log(N50)))+
geom_smooth()
ggplot(bag2, aes(x = assembly_length, y = Busco_M, color = log(N50)))+
geom_smooth()+
geom_point()
ggplot(bag2, aes(x = assembly_length, y = Busco_M, color = log(N50)))+
geom_smooth()+
geom_point()+
facet_wrap(~countgroup_2)
ggplot(bag2, aes(x = assembly_length, y = Busco_M, color = log(N50)))+
geom_point()+
facet_wrap(~countgroup_2)
ggplot(bag2, aes(x = assembly_length, y = Busco_M)+
ggplot(bag2, aes(x = assembly_length, y = Busco_M)_+
ggplot(bag2, aes(x = assembly_length, y = Busco_M))+
geom_point()+
facet_wrap(~countgroup_2)
ggplot(bag2, aes(x = total_reads, y = n_contigs))+
geom_point()+
facet_wrap(~countgroup_2)
ggplot(bag2, aes(x = total_reads, y = n_contigs))+
geom_point()+
facet_wrap(~countgroup_2)+
theme_bw()
ggplot(bag2, aes(x = total_reads, y = n_contigs))+
geom_point()+
facet_wrap(~countgroup_2)+
theme_bw()+
ggtitle("bag2, n = 412-104NAs = 308")
load("C:/Users/gec9/Documents/GitHub/MetaInvert-comparative-genomics/Acari_orders.Rdata")
View(Acari)
load("C:/Users/gec9/Documents/GitHub/MetaInvert-comparative-genomics/Acari_orders_all.Rdata")
